filter(n > 20) %>%
pairwise_cor(word, id, upper = TRUE)
cor_df %>%
filter(correlation >= 0.25) %>%
graph_from_data_frame() %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
geom_node_point() +
geom_node_text(aes(label = name), repel = TRUE) +
scale_color_viridis_c()
cor_df %>%
filter(correlation >= 0.3) %>%
graph_from_data_frame() %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
geom_node_point() +
geom_node_text(aes(label = name), repel = TRUE) +
scale_color_viridis_c()
cor_df <- data_raw %>%
filter(language == "english") %>%
rownames_to_column("id") %>%
unnest_tokens(word, review) %>%
filter(!word %in% stopwords::stopwords(),
!grepl("[[:punct:] ]+", word),
!grepl("[0-9]+", word),
!grepl("http", word)) %>%
mutate(word = case_when(word == "games" ~ "game",
TRUE ~ word)) %>%
add_count(word) %>%
filter(n > 15) %>%
pairwise_cor(word, id, upper = TRUE)
cor_df %>%
filter(correlation >= 0.3) %>%
graph_from_data_frame() %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
geom_node_point() +
geom_node_text(aes(label = name), repel = TRUE) +
scale_color_viridis_c()
cor_df %>%
filter(correlation >= 0.35) %>%
graph_from_data_frame() %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
geom_node_point() +
geom_node_text(aes(label = name), repel = TRUE) +
scale_color_viridis_c()
cor_df %>%
filter(correlation >= 0.31) %>%
graph_from_data_frame() %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
geom_node_point() +
geom_node_text(aes(label = name), repel = TRUE) +
scale_color_viridis_c()
cor_df %>%
filter(correlation >= 0.32) %>%
graph_from_data_frame() %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
geom_node_point() +
geom_node_text(aes(label = name), repel = TRUE) +
scale_color_viridis_c()
cor_df %>%
filter(correlation >= 0.32) %>%
graph_from_data_frame() %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = n), size = 3) +
scale_color_viridis_c() +
cor_df %>%
filter(correlation >= 0.32) %>%
graph_from_data_frame() %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = n), size = 3) +
scale_color_viridis_c()
cor_df <- data_raw %>%
filter(language == "english") %>%
rownames_to_column("id") %>%
unnest_tokens(word, review) %>%
filter(!word %in% stopwords::stopwords(),
!grepl("[[:punct:] ]+", word),
!grepl("[0-9]+", word),
!grepl("http", word)) %>%
mutate(word = case_when(word == "games" ~ "game",
TRUE ~ word)) %>%
add_count(word) %>%
filter(n > 15) %>%
pairwise_cor(word, id, upper = FALSE) %>%
filter(correlation >= 0.32 |
correlation <= -0.32) %>%
library(igraph)
cor_df <- data_raw %>%
filter(language == "english") %>%
rownames_to_column("id") %>%
unnest_tokens(word, review) %>%
filter(!word %in% stopwords::stopwords(),
!grepl("[[:punct:] ]+", word),
!grepl("[0-9]+", word),
!grepl("http", word)) %>%
mutate(word = case_when(word == "games" ~ "game",
TRUE ~ word)) %>%
add_count(word) %>%
filter(n > 15) %>%
pairwise_cor(word, id, upper = FALSE) %>%
filter(correlation >= 0.32 |
correlation <= -0.32)
tibble(
words = c(pcor$item1, pcor$item2)
)
tibble(
words = c(cor_df$item1, cor_df$item2)
) %>%
distinct()
ind_vertices <- tibble(
words = c(cor_df$item1, cor_df$item2)
) %>%
distinct()
data_raw
library(tidytext)
library(rvest)
library(SnowballC)
typos <- read_html("https://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings/For_machines") %>%
html_node(xpath = "/html/body/div[3]/div[3]/div[5]/div[1]/pre") %>%
html_text(trim = TRUE) %>%
as_tibble() %>%
separate_rows(value, sep = "[\r\n]") %>%
separate(value, c("wrong", "correct"), sep = "\\-\\>")
typos
data_raw %>%
filter(language == "english") %>%
rownames_to_column("id")
data_raw %>%
filter(language == "english") %>%
rownames_to_column("id") %>%
unnest_tokens(word, review) %>%
filter(!word %in% stop_words$word) %>%
left_join(
typos,
by = c("word" = "wrong")
)
data_raw %>%
filter(language == "english") %>%
rownames_to_column("id") %>%
unnest_tokens(word, review) %>%
filter(!word %in% stop_words$word) %>%
left_join(
typos,
by = c("word" = "wrong")
) %>%
mutate(word = ifelse(!is.na(correct), correct, word)) %>%
select(-correct) %>%
mutate(word_stem = wordStem(word))
stemmed_tokens <- data_raw %>%
filter(language == "english") %>%
rownames_to_column("id") %>%
unnest_tokens(word, review) %>%
filter(!word %in% stop_words$word) %>%
left_join(
typos,
by = c("word" = "wrong")
) %>%
mutate(word = ifelse(!is.na(correct), correct, word)) %>%
select(-correct) %>%
mutate(word_stem = wordStem(word))
stemmed_tokens
stemmed_tokens %>%
add_count(word_stem) %>%
filter(n > 100) %>%
filter(word_stem != "hmm",
!grepl("[0-9]", word_stem)) %>%
pairwise_cor(word_stem, reddit_id, upper = FALSE) %>%
filter(correlation >= 0.25 |
correlation <= -0.25)
stemmed_tokens
stemmed_tokens %>%
add_count(word_stem) %>%
filter(n > 100) %>%
filter(word_stem != "hmm",
!grepl("[0-9]", word_stem)) %>%
pairwise_cor(word_stem, id, upper = FALSE) %>%
filter(correlation >= 0.25 |
correlation <= -0.25)
stemmed_tokens %>%
add_count(word_stem) %>%
filter(n > 20) %>%
filter(word_stem != "hmm",
!grepl("[0-9]", word_stem)) %>%
pairwise_cor(word_stem, id, upper = FALSE) %>%
filter(correlation >= 0.25 |
correlation <= -0.25)
pcor <- stemmed_tokens %>%
add_count(word_stem) %>%
filter(n > 20) %>%
filter(word_stem != "hmm",
!grepl("[0-9]", word_stem)) %>%
pairwise_cor(word_stem, id, upper = FALSE) %>%
filter(correlation >= 0.25 |
correlation <= -0.25)
tibble(
words = c(pcor$item1, pcor$item2)
) %>%
distinct()
ind_vertices <- tibble(
words = c(pcor$item1, pcor$item2)
) %>%
distinct()
stemmed_tokens
stemmed_tokens %>%
count(word_stem) %>%
filter(word_stem %in% ind_vertices$words) %>%
as.data.frame()
vertices <- stemmed_tokens %>%
count(word_stem) %>%
filter(word_stem %in% ind_vertices$words) %>%
as.data.frame()
library(ggraph)
library(igraph)
library(showtext)
font_add_google("Schoolbell", "bell")
showtext_auto()
#library(ggnewscale)
set.seed(2021)
pcor %>%
graph_from_data_frame(vertices = vertices) %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
#new_scale_color() +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = n), size = 3) +
scale_color_viridis_c() +
geom_node_text(aes(label = name), repel = TRUE, size = 12, family = "bell") +
theme_void(base_family = "bell", base_size = 24)
pcor <- stemmed_tokens %>%
add_count(word_stem) %>%
filter(n > 15) %>%
filter(word_stem != "hmm",
!grepl("[0-9]", word_stem)) %>%
pairwise_cor(word_stem, id, upper = FALSE) %>%
filter(correlation >= 0.32 |
correlation <= -0.32)
ind_vertices <- tibble(
words = c(pcor$item1, pcor$item2)
) %>%
distinct()
vertices <- stemmed_tokens %>%
count(word_stem) %>%
filter(word_stem %in% ind_vertices$words) %>%
as.data.frame()
library(ggraph)
library(igraph)
library(showtext)
font_add_google("Schoolbell", "bell")
showtext_auto()
#library(ggnewscale)
set.seed(2021)
g_cor <- pcor %>%
graph_from_data_frame(vertices = vertices) %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
#new_scale_color() +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = n), size = 3) +
scale_color_viridis_c() +
geom_node_text(aes(label = name), repel = TRUE, size = 12, family = "bell") +
theme_void(base_family = "bell", base_size = 24) +
labs(title = 'Correlation of words appeared in reddits Kingdom of the week ("KOTW") posts',
subtitle = paste0("Words are corrected and stemmed, date: ", format(heute, "%b %d, %Y"), "\n",
"Words filterd with p (rho) >0.25"),
color = "Count word stem appeared",
edge_color = "Word pair correlation"
) +
theme(legend.position = "bottom",
plot.subtitle = element_text(lineheight = 0.5)) +
guides(color = guide_colorbar(title.position = "top"),
edge_color = guide_edge_colorbar(title.position = "top"))
pcor %>%
graph_from_data_frame(vertices = vertices) %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
#new_scale_color() +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = n), size = 3) +
scale_color_viridis_c() +
geom_node_text(aes(label = name), repel = TRUE, size = 12, family = "bell") +
theme_void(base_family = "bell", base_size = 24)
stemmed_tokens
stemmed_tokens
stemmed_tokens %>%
add_count(word_stem) %>%
filter(n > 15) %>%
filter(word_stem != "hmm",
!grepl("[0-9]", word_stem)) %>%
pairwise_cor(word_stem, id, upper = FALSE) %>%
filter(correlation >= 0.32 |
correlation <= -0.32)
stemmed_tokens
stemmed_tokens
stemmed_tokens %>%
group_by(word_stem) %>%
summarise(votes_up = sum(votes_up))
stemmed_tokens %>% hist(votes_up)
stemmed_tokens
hist(stemmed_tokens$votes_up)
stemmed_tokens %>%
group_by(word_stem, id) %>%
summarise(votes_up = sum(votes_up))
stemmed_tokens
stemmed_tokens %>%
select(id, word_stem, votes_up)
stemmed_tokens %>%
select(id, word_stem, votes_up) %>%
distinct()
stemmed_tokens %>%
select(id, word_stem, votes_up) %>%
distinct() %>%
group_by(id, word_stem) %>%
summarise(avg_stem = mean(votes_up))
stemmed_tokens %>%
select(id, word_stem, votes_up) %>%
distinct() %>%
group_by(word_stem) %>%
summarise(avg_stem = mean(votes_up))
ind_vertices
stemmed_tokens %>%
select(id, word_stem, votes_up) %>%
distinct() %>%
group_by(word_stem) %>%
summarise(avg_stem = mean(votes_up))
filter(word_stem %in% ind_vertices$words) %>%
as.data.frame()
tem
vertices <- stemmed_tokens %>%
select(id, word_stem, votes_up) %>%
distinct() %>%
group_by(word_stem) %>%
summarise(avg_stem = mean(votes_up))
stemmed_tokens %>%
select(id, word_stem, votes_up) %>%
distinct() %>%
group_by(word_stem) %>%
summarise(avg_stem = mean(votes_up)) %>%
filter(word_stem %in% ind_vertices$words) %>%
as.data.frame()
## hypothesis
## votes per review and its associated stem
## average stem
vertices <- stemmed_tokens %>%
select(id, word_stem, votes_up) %>%
distinct() %>%
group_by(word_stem) %>%
summarise(avg_stem = mean(votes_up)) %>%
filter(word_stem %in% ind_vertices$words) %>%
as.data.frame()
## hypothesis
## votes per review and its associated stem
## average stem
vertices <- stemmed_tokens %>%
select(id, word_stem, votes_up) %>%
distinct() %>%
group_by(word_stem) %>%
summarise(avg_stem = mean(votes_up)) %>%
filter(word_stem %in% ind_vertices$words) %>%
as.data.frame()
ind_vertices <- tibble(
words = c(pcor$item1, pcor$item2)
) %>%
distinct()
## hypothesis
## votes per review and its associated stem
## average stem
vertices <- stemmed_tokens %>%
select(id, word_stem, votes_up) %>%
distinct() %>%
group_by(word_stem) %>%
summarise(avg_stem = mean(votes_up)) %>%
filter(word_stem %in% ind_vertices$words) %>%
as.data.frame()
library(ggraph)
library(igraph)
library(showtext)
font_add_google("Schoolbell", "bell")
showtext_auto()
#library(ggnewscale)
set.seed(2021)
pcor %>%
graph_from_data_frame(vertices = vertices) %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
#new_scale_color() +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = avg_stem), size = 3) +
scale_color_viridis_c() +
geom_node_text(aes(label = name), repel = TRUE, size = 12, family = "bell") +
theme_void(base_family = "bell", base_size = 24)
pcor %>%
graph_from_data_frame(vertices = vertices) %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
#new_scale_color() +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = avg_stem), size = 3) +
scale_color_viridis_c() +
geom_node_text(aes(label = name), repel = TRUE, size = 12, family = "bell") +
theme_void(base_family = "bell", base_size = 24) +
labs(title = 'Correlation of words appeared in steam review for game: 280720',
subtitle = paste0("Words are corrected and stemmed, date: ", format(heute, "%b %d, %Y"), "\n",
"Words filterd with p (rho) >0.25"),
color = "Count word stem appeared",
edge_color = "Word pair correlation"
)
heute <- Sys.Date()
pcor %>%
graph_from_data_frame(vertices = vertices) %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
#new_scale_color() +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = avg_stem), size = 3) +
scale_color_viridis_c() +
geom_node_text(aes(label = name), repel = TRUE, size = 12, family = "bell") +
theme_void(base_family = "bell", base_size = 24) +
labs(title = 'Correlation of words appeared in steam review for game: 280720',
subtitle = paste0("Words are corrected and stemmed, date: ", format(heute, "%b %d, %Y"), "\n",
"Words filterd with p (rho) >0.25"),
color = "Count word stem appeared",
edge_color = "Word pair correlation"
) +
theme(legend.position = "bottom",
plot.subtitle = element_text(lineheight = 0.5)) +
guides(color = guide_colorbar(title.position = "top"),
edge_color = guide_edge_colorbar(title.position = "top"))
pcor %>%
graph_from_data_frame(vertices = vertices) %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
#new_scale_color() +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = avg_stem), size = 3) +
scale_color_viridis_c() +
geom_node_text(aes(label = name), repel = TRUE, size = 12, family = "bell") +
theme_void(base_family = "bell", base_size = 24) +
labs(title = 'Correlation of words appeared in steam review for game: 280720',
subtitle = paste0("Words are corrected and stemmed, date: ", format(heute, "%b %d, %Y"), "\n",
"Words filterd with p (rho) >0.25"),
color = "Average votes\nthe stem received",
edge_color = "Word pair correlation"
) +
theme(legend.position = "bottom",
plot.subtitle = element_text(lineheight = 0.5)) +
guides(color = guide_colorbar(title.position = "top"),
edge_color = guide_edge_colorbar(title.position = "top"))
pcor %>%
graph_from_data_frame(vertices = vertices) %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
#new_scale_color() +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = avg_stem), size = 3) +
scale_color_viridis_c() +
geom_node_text(aes(label = name), repel = TRUE, size = 12, family = "bell") +
theme_void(base_family = "bell", base_size = 24) +
labs(title = 'Correlation of words appeared in steam review for game: 280720',
subtitle = paste0("Words are corrected and stemmed, date: ", format(heute, "%b %d, %Y"), "\n",
"Words filterd with p (rho) >0.25"),
color = "Average votes\nthe stem received",
edge_color = "Word pair\ncorrelation"
) +
theme(legend.position = "bottom",
plot.subtitle = element_text(lineheight = 0.5)) +
guides(color = guide_colorbar(title.position = "top"),
edge_color = guide_edge_colorbar(title.position = "top"))
pcor %>%
graph_from_data_frame(vertices = vertices) %>%
ggraph("fr") +
geom_edge_link(aes(color = correlation), edge_width = 1.2) +
scale_edge_color_gradient2(low = "#72bcd4", high = "red", midpoint = 0.6) +
#new_scale_color() +
geom_node_point(size = 3.5, color = "black") +
geom_node_point(aes(color = avg_stem), size = 3) +
scale_color_viridis_c() +
geom_node_text(aes(label = name), repel = TRUE, size = 12, family = "bell") +
theme_void(base_family = "bell", base_size = 24) +
labs(title = 'Correlation of words most appeared in steam review for game: 280720',
subtitle = paste0("Words are corrected and stemmed, date: ", format(heute, "%b %d, %Y"), "\n",
"Words filterd with p (rho) > 0.32"),
color = "Average votes\nthe stem received",
edge_color = "Word pair\ncorrelation"
) +
theme(legend.position = "bottom",
plot.subtitle = element_text(lineheight = 0.5)) +
guides(color = guide_colorbar(title.position = "top"),
edge_color = guide_edge_colorbar(title.position = "top"))
